name: dcn-etl

services:

  extract:
    image: rclone/rclone:latest
    container_name: etl_extract
    volumes:
      - ./data:/staging           # where you want the files to land
      - ~/.config/rclone/rclone.conf:/root/.config/rclone/rclone.conf:ro
    entrypoint: /bin/sh
    working_dir: /app
    command:
      - -c
      - |
        set -e

        if [ -z "$RCLONE_CONTAINER" ]; then
          echo "ERROR: RCLONE_CONTAINER is not set"
          exit 1
        fi

        echo "Creating local staging dirs..."
        mkdir -p /staging/raw \
                 /staging/user_latent_vectors \
                 /staging/item_latent_vectors \
                 /staging/dcn

        echo "Downloading raw Yelp files..."
        rclone copy chi_tacc:"$RCLONE_CONTAINER/raw" \
          /staging/raw \
          --progress --transfers=16 --checkers=8 --fast-list

        echo "Downloading user latent vectors..."
        rclone copy chi_tacc:"$RCLONE_CONTAINER/user_latent_vectors" \
          /staging/user_latent_vectors \
          --progress --transfers=16 --checkers=8 --fast-list

        echo "Downloading item latent vectors..."
        rclone copy chi_tacc:"$RCLONE_CONTAINER/item_latent_vectors" \
          /staging/item_latent_vectors \
          --progress --transfers=16 --checkers=8 --fast-list

        echo "All downloads complete. Local contents:"
        echo "raw:" && ls -lh /staging/raw
        echo "user_latent_vectors:" && ls -lh /staging/user_latent_vectors
        echo "item_latent_vectors:" && ls -lh /staging/item_latent_vectors

  transform:
    build:
      context: .
      dockerfile: Dockerfile.transform
    container_name: etl_transform
    volumes:
      - ./scripts:/app
      - ./data:/staging
    working_dir: /app
    environment:
      - PYTHONUNBUFFERED=1
      - PANDAS_CHUNKSIZE=100000
      - NUMEXPR_MAX_THREADS=4
      - PYTHONMALLOC=malloc
      - MALLOC_TRIM_THRESHOLD_=100000
      - PYTHONGC=1
      - OMP_NUM_THREADS=4
    deploy:
      resources:
        limits:
          memory: 12G
          cpus: '3.5'
        reservations:
          memory: 8G
          cpus: '2.0'
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    depends_on:
      - extract
    command: ["python", "transform.py"]

  load:
    image: rclone/rclone:latest
    container_name: etl_load
    volumes:
      - ./data:/staging
      - ~/.config/rclone/rclone.conf:/root/.config/rclone/rclone.conf:ro
    entrypoint: ["/bin/sh", "-c"]
    depends_on:
      - transform
    command:
      - |
        set -e

        if [ -z "$RCLONE_CONTAINER" ]; then
          echo "ERROR: RCLONE_CONTAINER is not set"
          exit 1
        fi

        # Wait for transform to create the output files
        while [ ! -f /staging/dcn/train.parquet ] || \
              [ ! -f /staging/dcn/validation.parquet ] || \
              [ ! -f /staging/dcn/production.parquet ]; do
          echo "Waiting for transform to complete..."
          sleep 10
        done

        # ensure target path exists
        rclone mkdir chi_tacc:"$RCLONE_CONTAINER/dcn"

        # copy the transformed data
        echo "Uploading transformed data..."
        rclone copy /staging/dcn \
          chi_tacc:"$RCLONE_CONTAINER/dcn" \
          --progress --transfers=16 --checkers=8 --fast-list

        echo "Load complete. Contents of dcn/:"
        rclone ls chi_tacc:"$RCLONE_CONTAINER/dcn"